---
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";
import { Pencil2Icon } from "@radix-ui/react-icons";

import headshot from "@/assets/gs-headshot.jpg";
import Layout from "@/layouts/Layout.astro";

export async function getStaticPaths() {
  const articles = await getCollection("articles");

  return articles.map((article) => ({
    params: { id: article.id },
    props: { article },
  }));
}

const { article } = Astro.props;
const { title, description, published, updated } = article.data;
const { Content } = await render(article);

function formatDate(date = new Date()) {
  const options: Intl.DateTimeFormatOptions = {
    month: "short",
    day: "numeric",
    year: "numeric",
  };

  return date.toLocaleDateString(undefined, options);
}
---

<Layout title={`George Song | Article: ${title}`} description={description}>
  <header class="prose-default my-1 !mb-6 w-full sm:my-2">
    <a
      href="/"
      aria-label="Return home"
      class="flex-center justify-start gap-4"
    >
      <Image src={headshot} alt="" class="!m-0 size-12 rounded-full" />
      George Song
    </a>
  </header>

  <main
    class="prose-default mt-0 max-w-[min(65ch,calc(100vw-2*var(--mx)))] sm:mt-4"
  >
    <h1>{title}</h1>

    <div class="flex-center text-[0.9em] text-(--tw-prose-body)/80">
      <Pencil2Icon className="size-5" />
      <time itemprop="datePublished" datetime={published.toISOString()}
        >{formatDate(published)}</time
      >
      {
        updated ? (
          <time itemprop="dateModified" datetime={updated.toISOString()}>
            (updated {formatDate(updated)})
          </time>
        ) : null
      }
    </div>

    <Content />
  </main>
</Layout>
